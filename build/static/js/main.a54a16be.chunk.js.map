{"version":3,"sources":["Todolist/Todolist.js","Todolist/Todoinput.js","App.js","index.js"],"names":["Todolist","datalist","this","props","className","style","float","color","tar1","map","item","idx","tar","console","log","key","id","type","onClick","cha","del","tar2","checked","onchange","Component","Todoinput","handleInput","e","keyCode","target","value","add","alert","onKeyDown","placeholder","App","addItem","data","d","setState","state","delItem","index","splice","chaItem","todo","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a54a16be.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './todo.css'\r\n\r\nexport default class Todolist extends Component {\r\n    render() {\r\n        const {datalist} = this.props;\r\n        //对调用的数据进行解构\r\n        return(\r\n            <div className='bb'> \r\n                <div className='bb1'>\r\n                    <h2>正在进行 <span style={{float:\"right\",color:\"#fff\"}}>{this.props.tar1}</span> </h2>\r\n                    <ul>\r\n                        {\r\n                           datalist.map((item,idx)=>{\r\n                               if(item.tar == 0){\r\n                                   console.log(item.key);\r\n                                   return(\r\n                                       <li id='word'>\r\n                                           <input style={{float:'left'}} type=\"checkbox\" onClick={()=>this.props.cha(idx)}/>\r\n                                            <p style={{float:'left'}}>{item.key}</p>\r\n                                            <button style={{float:'right'}} onClick={()=>this.props.del(idx)}>删除</button>\r\n                                       </li>\r\n                                   )\r\n                               }\r\n                               return \"\";\r\n                           })\r\n                        }\r\n                    </ul>\r\n                    <h2>已经完成 <span style={{float:\"right\",color:\"#fff\"}}>{this.props.tar2}</span> </h2>\r\n                    <ul>\r\n                        {\r\n                            datalist.map((item,idx)=>{\r\n                                if(item.tar == 1){\r\n                                    return(\r\n                                        <li id='word'>\r\n                                            <input style={{float:'left'}} type=\"checkbox\" checked='checked' onchange=\"update(0,'done',false)\" onClick={()=>this.props.cha(idx)}></input>\r\n                                            <p style={{float:'left'}}>{item.key}</p>\r\n                                            <button style={{float:'right'}} onClick={()=>this.props.del(idx)}>删除</button>\r\n                                        </li>\r\n                                    )\r\n                                }\r\n                                return \"\";\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './todo.css'\r\n\r\nexport default class Todoinput extends Component {\r\n    //定义键盘点击事件函数\r\n    handleInput =(e)=>{\r\n        if(e.keyCode == 13){\r\n            if(e.target.value !== ''){\r\n                this.props.add(e.target.value);\r\n                e.target.value = '';\r\n            }else{\r\n                alert(\"请输入内容！\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"total\">\r\n                <div className=\"total1\">\r\n                    <h1 >ToDoList</h1>\r\n                    <input onKeyDown={this.handleInput} placeholder=\"添加ToDo\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Todolist from './Todolist/Todolist'\r\nimport Todoinput from './Todolist/Todoinput'\r\n\r\nexport default class App extends Component {\r\n    constructor(){\r\n        super();\r\n        let todo = JSON.parse(localStorage.getItem('todo'));\r\n        if(todo == null){\r\n            this.state = {\r\n                datalist:[]\r\n            }\r\n        }\r\n        else{\r\n            this.state={\r\n                datalist:todo\r\n            }\r\n        }\r\n    }\r\n    //定义状态\r\n    //添加\r\n    addItem = (data)=>{\r\n        let d = {'key':data,'tar':0};\r\n        this.setState({\r\n            datalist:[...this.state.datalist,d]\r\n        })\r\n    }\r\n    //删除\r\n    delItem = (index)=>{\r\n        let datalist = [...this.state.datalist];\r\n        datalist.splice(index,1);\r\n        this.setState\r\n        ({\r\n            datalist:datalist\r\n        })\r\n    }\r\n    //改变数据的标志值，实现上下切换\r\n    chaItem = (index)=>{\r\n        let datalist=[...this.state.datalist];\r\n        if(datalist[index].tar===1){\r\n            datalist[index].tar=0;\r\n            this.setState({\r\n                datalist:datalist\r\n            })\r\n        }\r\n        else{\r\n            datalist[index].tar=1;\r\n            this.setState({\r\n                datalist:datalist\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let todo = localStorage.setItem('todo',JSON.stringify(this.state.datalist));\r\n        //设置tar1,tar2两个计数值，统计上下两栏的数量\r\n        let tar1 = 0;\r\n        let tar2 = 0;\r\n        //遍历对标志值进行判断\r\n        this.state.datalist.map(item => {\r\n            if(item.tar === 1){\r\n                tar2++;\r\n            }\r\n            else{\r\n                tar1++;\r\n            }\r\n        });\r\n        //调用子组件\r\n        return (\r\n            <div>\r\n                <Todoinput add = {this.addItem}/>\r\n                <Todolist tar1={tar1} tar2={tar2} del={this.delItem} cha={this.chaItem} datalist={this.state.datalist}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Fragment,Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n   <App/>,\n    document.getElementById('root')\n)\n\n\n\n"],"sourceRoot":""}